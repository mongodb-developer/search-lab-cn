"use strict";(self.webpackChunksearch_party_lab=self.webpackChunksearch_party_lab||[]).push([[4833],{344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=n(5893),o=n(1151);const a={},i="\ud83d\udc50 Construct Search queries",r={id:"aggregations/search-stage",title:"\ud83d\udc50 Construct Search queries",description:"You can construct Atlas Search queries with the $search aggregation pipeline stage.",source:"@site/docs/3-aggregations/1-search-stage.mdx",sourceDirName:"3-aggregations",slug:"/aggregations/search-stage",permalink:"/search-lab-cn/docs/aggregations/search-stage",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/search-lab-cn/blob/main/docs/3-aggregations/1-search-stage.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Aggregation pipelines",permalink:"/search-lab-cn/docs/category/aggregation-pipelines"},next:{title:"Implementing Atlas Search",permalink:"/search-lab-cn/docs/category/implementing-atlas-search"}},c={},l=[{value:"Aggregations in the Atlas UI",id:"aggregations-in-the-atlas-ui",level:2}];function g(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{Link:n,Screenshot:a}=t;return n||d("Link",!0),a||d("Screenshot",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"-construct-search-queries",children:"\ud83d\udc50 Construct Search queries"}),"\n",(0,s.jsxs)(t.p,{children:["You can construct Atlas Search queries with the ",(0,s.jsx)(t.code,{children:"$search"})," aggregation pipeline stage."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(n,{to:"https://mongodb.com/docs/manual/core/aggregation-pipeline",children:"MongoDB aggregation pipelines"})," are multi-stage \u2018assembly lines\u2019 that reshape data and perform calculations. Pipelines can consist of one or more aggregation stages, performing different operations like match, group, sort, and output. For an exhaustive list of all available stages visit ",(0,s.jsx)(n,{to:"https://mongodb.com/docs/manual/reference/operator/aggregation-pipeline/#std-label-aggregation-pipeline-operator-reference",children:"the complete list of pipeline operators"}),"."]}),"\n",(0,s.jsx)(t.admonition,{type:"caution",children:(0,s.jsxs)(t.p,{children:["If you are not familiar with the aggregation pipelines, you should start with the ",(0,s.jsx)(t.a,{href:"https://mongodb-developer.github.io/aggregation-pipeline-lab/",children:"Advanced Querying With Aggregation Pipelines"}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["In this section, we'll build an aggregation pipeline with the ",(0,s.jsx)(t.code,{children:"$search"})," stage which performs full-text search using the Atlas Search index you just created."]}),"\n",(0,s.jsx)(t.h2,{id:"aggregations-in-the-atlas-ui",children:"Aggregations in the Atlas UI"}),"\n",(0,s.jsxs)(t.p,{children:["Navigate to the ",(0,s.jsx)(t.strong,{children:"Collections"})," tab of your database deployment, pick the ",(0,s.jsx)(t.code,{children:"books"})," collection, and navigate to the ",(0,s.jsx)(t.strong,{children:"Aggregation"})," tab from the navbar under your collection details."]}),"\n",(0,s.jsx)(a,{alt:"Aggregations tab highlighted on the collection details page",src:"img/screenshots/3-aggregations/1-search-stage/1-aggregation-tab.png",url:"https://cloud.mongodb.com"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["The Atlas UI can start feeling a bit cramped at this point. You can also use the aggregation pipeline builder in ",(0,s.jsx)(n,{to:"https://www.mongodb.com/products/tools/compass",children:"Compass"})," for a better experience."]})}),"\n",(0,s.jsxs)(t.p,{children:["Click the ",(0,s.jsx)(t.strong,{children:"Add Stage"})," button and type ",(0,s.jsx)(t.strong,{children:"$search"})," in the ",(0,s.jsx)(t.strong,{children:"select"})," input."]}),"\n",(0,s.jsx)(a,{alt:"Stage 1 of the pipeline with the $search stage selected",src:"img/screenshots/3-aggregations/1-search-stage/2-search-stage.png",url:"https://cloud.mongodb.com"}),"\n",(0,s.jsxs)(t.p,{children:["Add the following code for the ",(0,s.jsx)(t.code,{children:"$search"})," stage."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'{\n    index: "fulltextsearch",\n    text: {\n        query: "cooking",\n        path: ["title"]\n    }\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:'The stage uses the "fulltextsearch" index. You don\'t need to explicitly define the index if it\'s "default" but you can keep it for clarity.'}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"text"}),' operator will search for "cooking" in the ',(0,s.jsx)(t.code,{children:"title"})," field. You should see a collection of documents returned on the right."]}),"\n",(0,s.jsxs)(t.p,{children:["Click the ",(0,s.jsx)(t.strong,{children:"Add Stage"})," button, scroll down, and select ",(0,s.jsx)(t.strong,{children:"$project"})," for Stage 2."]}),"\n",(0,s.jsx)(a,{alt:"Stage 2 of the pipeline with the $project stage selected",src:"img/screenshots/3-aggregations/1-search-stage/3-project-stage.png",url:"https://cloud.mongodb.com"}),"\n",(0,s.jsxs)(t.p,{children:["Add the following implementation for the ",(0,s.jsx)(t.code,{children:"$project"})," stage to filter the returned fields."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"{\n  title: 1,\n  authors: 1,\n  genres: 1,\n  pages: 1\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"At this point, you should see similar results as what you did in the last section, as this is pretty much the same query."})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function d(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>i});var s=n(7294);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);